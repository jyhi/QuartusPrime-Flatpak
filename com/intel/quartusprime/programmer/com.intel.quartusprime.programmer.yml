# SPDX-FileCopyrightText: 2024-2025 Junde Yhi <junde@yhi.moe>
# SPDX-License-Identifier: CC0-1.0

id: com.intel.quartusprime.programmer
collection-id: com.intel.quartusprime
runtime: org.freedesktop.Platform
runtime-version: '24.08'
sdk: org.freedesktop.Sdk
finish-args:
  - --allow=multiarch
  - --device=all
  - --share=ipc
  - --socket=x11
  - --socket=wayland
  - --socket=fallback-x11
  - --filesystem=host:ro
command: quartus_pgmw.sh
modules:
  # Supply libcrypt.so.1, which is still required by the software.
  - name: libxcrypt-compat
    buildsystem: autotools
    config-opts:
      - --prefix=/app
      - --enable-hashes=glibc
      - --enable-obsolete-api=glibc
      - --disable-static
      - --disable-failure-tokens
    install-rule: install-exec # no header or manpage
    sources:
      - type: archive
        url: https://github.com/besser82/libxcrypt/releases/download/v4.4.38/libxcrypt-4.4.38.tar.xz
        sha256: 80304b9c306ea799327f01d9a7549bdb28317789182631f1b54f4511b4206dd6

  # Adjust loader configuration to include the vendored libxcrypt.
  - name: ld-so-conf
    buildsystem: simple
    build-commands:
      - mkdir -p /app/etc
      - cp ld.so.conf /app/etc/ld.so.conf
    sources:
      - type: inline
        dest-filename: ld.so.conf
        contents: |
          /app/lib

  # Run the installer for Quartus Prime Programmer.
  - name: installation
    buildsystem: simple
    build-commands:
      - chmod u+x QuartusProgrammerSetup-24.1std.0.1077-linux.run
      - ./QuartusProgrammerSetup-24.1std.0.1077-linux.run --mode unattended --installdir /app/opt/altera/24.1std --product_copy_name Flatpak --accept_eula 1
      # Rectify permissions:
      # - All directories have rwxr-xr-x (0755)
      # - All executable files have rwxr-xr-x (0755)
      # - All non-executable files have rw-r--r-- (0644)
      # - All setuid and setgid are cleared
      - find /app/opt -type d -exec chmod u=rwx-s,g=rx-s,o=rx {} \;
      - find /app/opt -type f -perm -u=x -exec chmod u=rwx-s,g=rx-s,o=rx {} \;
      - find /app/opt -type f ! -perm -u=x -exec chmod u=rw-s,g=r-s,o=r {} \;
    sources:
      - type: file
        path: QuartusProgrammerSetup-24.1std.0.1077-linux.run
        # sha1: e44db75a76b5924e7f16043513ea8837695a97ef
        sha256: cb6f7e025350a1aba1d7511535f531902ab9f229f896a839b9f1fcd7446db96d

  # Do various post-installation work. Separated from the last step because we want it to be kept cached.
  - name: post-installation
    buildsystem: simple
    build-commands:
      # Remove unnecessary files.
      - rm -fr /app/opt/altera/24.1std/logs
      - rm -fr /app/opt/altera/24.1std/uninstall
      # Add AppStream data, application icon, and desktop entry.
      - mkdir -p /app/share/metainfo
      - cp com.intel.quartusprime.programmer.metainfo.xml /app/share/metainfo
      - mkdir -p /app/share/icons/hicolor/64x64/apps
      - cp /app/opt/altera/24.1std/qprogrammer/adm/quartusii.png /app/share/icons/hicolor/64x64/apps/com.intel.quartusprime.programmer.png
      - mkdir -p /app/share/applications
      - cp com.intel.quartusprime.programmer.desktop /app/share/applications
    sources:
      - type: file
        path: com.intel.quartusprime.programmer.metainfo.xml
      - type: inline
        dest-filename: com.intel.quartusprime.programmer.desktop
        contents: |
          [Desktop Entry]
          Version=1.0
          Type=Application
          Name=Quartus Prime Programmer
          Comment=Intel FPGA standalone programmer
          Categories=Development;Electronics;
          Icon=com.intel.quartusprime.programmer
          Exec=
          Terminal=false

  # Install two scripts as entry points:
  #
  # - enable.sh sets up the environment. The name follows the convention for similar scripts in SDK extensions.
  # - quartus_pgmw.sh launches Quartus Prime Programmer. It's the declared Flatpak entry point.
  #
  # source enable.sh to run programs other than Quartus Prime Programmer (e.g. command-line utilities or bash).
  # quartus_pgmw.sh sources enable.sh before launching Quartus Prime. See also:
  # <https://www.intel.com/content/www/us/en/docs/programmable/683472/24-3/setting-environment-variables-67330.html>.
  - name: entrypoint-sh
    buildsystem: simple
    build-commands:
      - mkdir -p /app/bin
      - cp enable.sh /app/enable.sh
      - cp quartus_pgmw.sh /app/bin/quartus_pgmw.sh
      - chmod u=rwx,go=rx /app/enable.sh /app/bin/quartus_pgmw.sh
    sources:
      - type: script
        dest-filename: enable.sh
        commands:
          - QPROGRAMMER_ROOTDIR='/app/opt/altera/24.1std/qprogrammer'
          - export QSYS_ROOTDIR="${QPROGRAMMER_ROOTDIR}/sopc_builder/bin"
          - export PATH="${PATH}:${QPROGRAMMER_ROOTDIR}/bin:${QSYS_ROOTDIR}"
      - type: script
        dest-filename: quartus_pgmw.sh
        commands:
          - ARGS="$@"
          - . /app/enable.sh
          - quartus_pgmw "${ARGS:---64bit}"
